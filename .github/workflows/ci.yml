name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql+asyncpg://test_user:test_pass@localhost:5432/test_db
      ENV_FILE: .env.ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.7"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify pyproject.toml & poetry.lock consistency
        run: |
          poetry lock --check

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=app --cov=libkoiki --cov-report=term-missing --cov-report=html tests/

      - name: Upload HTML coverage report (optional)
        if: ${{ env.ACT != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: htmlcov
