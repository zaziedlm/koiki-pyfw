# alembic.ini
# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# template for migration file names, e.g. %%(year)d%%(month).2d%%(day).2d_%%(rev)s
# file_template = %%(rev)s_%%(slug)s

# timezone for timestamps within the migration file
# timezone = UTC

# max length of characters to apply to the derivation of a new filename.
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow alembic to prompt for user input.
# requires_biss = false

# Deprecated, use sqlalchemy.url directly
# dataSource = false

# Set to true to enable logging of SQL statements generated by Alembic.
# output_encoding = utf-8

sqlalchemy.url = postgresql+psycopg2://koiki_user:koiki_password@db:5432/koiki_todo_db


[post_write_hooks]
# Hooks are organized by name, using keys of the form "hook.<name> ...".
# The hooks execute in alphabetical order by name.
# Available hook options are:
#   type - Required. Specifies the type of hook. Set to "black" or "isort" for bundled hooks.
#          Or use "<module>:<callable>" to define your own hook function.
#   entrypoint - Optional. Set to the identifying name for the entry point defined
#                for the hook package. Required when type is not set to a custom function.
#   options - Optional. Provide arguments for the hook function.
#             If type is set to "black" or "isort", the default option is "--safe".
#   kwargs - Optional. Provide keyword arguments for the hook function.
# Example using the bundled Black hook:
# hooks = black, isort
# hook.black.type = black
# hook.black.options = -l 79
# hook.black.kwargs = mode=Mode(preview=True)
# hook.isort.type = isort
# hook.isort.options = --profile black

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S