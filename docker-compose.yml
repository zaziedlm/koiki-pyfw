# docker-compose.yml
services:
  db:
    image: postgres:15
    container_name: koiki_postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env # 環境変数を参照
    ports:
      - "5432:5432" # ローカルで直接DBに接続したい場合
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-koiki_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-koiki_password}
      POSTGRES_DB: ${POSTGRES_DB:-koiki_todo_db}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    # PostgreSQLのパフォーマンス設定
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=256MB"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: koiki_fastapi_app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app # アプリケーションコード
      - ./libkoiki:/app/libkoiki # フレームワークコード
      - ./alembic:/app/alembic # Alembic 設定
      - ./alembic.ini:/app/alembic.ini
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload # 開発時はリロード有効
    restart: always

volumes:
  postgres_data:
